name: SonarCloud Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: src/

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        working-directory: ${{env.GITHUB_WORKSPACE}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}        
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"antipholus1_build-chain" /o:"antipholus" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"


# jobs:
#   build:
#     name: Build
#     permissions: write-all
#     runs-on: windows-latest
#     steps:
#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.11
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Add MSBuild to PATH
#         uses: microsoft/setup-msbuild@v1.0.2

#       - name: Restore NuGet packages
#         working-directory: ${{env.GITHUB_WORKSPACE}}
#         run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#       - name: Cache SonarCloud packages
#         uses: actions/cache@v1
#         with:
#           path: ~\sonar\cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache SonarCloud scanner
#         id: cache-sonar-scanner
#         uses: actions/cache@v1
#         with:
#           path: .\.sonar\scanner
#           key: ${{ runner.os }}-sonar-scanner
#           restore-keys: ${{ runner.os }}-sonar-scanner
#       - name: Install SonarCloud scanner
#         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           New-Item -Path .\.sonar\scanner -ItemType Directory
#           dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
#       - name: Build and analyze
#         working-directory: ${{env.GITHUB_WORKSPACE}}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         shell: powershell
#         run: |
#           .\.sonar\scanner\dotnet-sonarscanner begin /k:"antipholus1_build-chain" /o:"antipholus" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
#           ./msbuild.exe /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
#           .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

        # .\.sonar\scanner\dotnet-sonarscanner begin /k:"antipholus1_build-chain" /o:"antipholus" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        # <insert_your_build_command>
        # .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

        # SonarScanner.MSBuild.exe begin /k:"antipholus1_build-chain" /o:"antipholus" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        # MSBuild.exe <path to solution.sln> /t:Rebuild
        # SonarScanner.MSBuild.exe end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"